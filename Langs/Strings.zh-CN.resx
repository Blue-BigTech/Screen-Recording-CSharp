<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutForm" xml:space="preserve">
    <value>关于本软件</value>
  </data>
  <data name="aboutToolStripMenuItem" xml:space="preserve">
    <value>关于本软件</value>
  </data>
  <data name="audioToolStripMenuItem" xml:space="preserve">
    <value>音频录制</value>
  </data>
  <data name="BtnDeskAudio" xml:space="preserve">
    <value>选择系统音频</value>
  </data>
  <data name="BtnDeskAudio2" xml:space="preserve">
    <value>选择系统音频</value>
  </data>
  <data name="BtnExit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="BtnMergeAll" xml:space="preserve">
    <value>混合选定的文件</value>
  </data>
  <data name="BtnMergeAll2" xml:space="preserve">
    <value>混合选定的文件</value>
  </data>
  <data name="BtnMicAudio" xml:space="preserve">
    <value>选择麦克风音频</value>
  </data>
  <data name="btnOutputF" xml:space="preserve">
    <value>输出文件夹</value>
  </data>
  <data name="btnOutputF2" xml:space="preserve">
    <value>输出文件夹</value>
  </data>
  <data name="btnOutputRecordings" xml:space="preserve">
    <value>显示录像</value>
  </data>
  <data name="btnStartRecording" xml:space="preserve">
    <value>开始录制</value>
  </data>
  <data name="BtnStop" xml:space="preserve">
    <value>停止录制</value>
  </data>
  <data name="BtnVideo" xml:space="preserve">
    <value>选择一个视频文件</value>
  </data>
  <data name="BtnVideo2" xml:space="preserve">
    <value>选择一个视频文件</value>
  </data>
  <data name="crownGroupBox1" xml:space="preserve">
    <value>视频设置</value>
  </data>
  <data name="crownGroupBox2" xml:space="preserve">
    <value>音频设置</value>
  </data>
  <data name="crownGroupBox3" xml:space="preserve">
    <value>视频录制控制</value>
  </data>
  <data name="Label2" xml:space="preserve">
    <value>视频录制控制</value>
  </data>
  <data name="Label4" xml:space="preserve">
    <value>麦克风 (Mic/Aux)</value>
  </data>
  <data name="Label5" xml:space="preserve">
    <value>系统声音 (Desktop Audio)</value>
  </data>
  <data name="Label6" xml:space="preserve">
    <value>音频录制方法</value>
  </data>
  <data name="Label7" xml:space="preserve">
    <value>音频设备</value>
  </data>
  <data name="labelCodec" xml:space="preserve">
    <value>编码器</value>
  </data>
  <data name="labelResolution" xml:space="preserve">
    <value>分辨率</value>
  </data>
  <data name="languagesToolStripMenuItem" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="LbAbout1" xml:space="preserve">
    <value>你可以在GitHub上找到这个项目，它的名字是
"Simple-Screen-Recorder"。而我的名字是
"Lextrack"。请继续关注，很快会有更多的更新。</value>
  </data>
  <data name="LbAbout2" xml:space="preserve">
    <value>这个软件是由于
教程VbNET 和 Flaticon。</value>
  </data>
  <data name="mergeVideoAndDesktopAudioToolStripMenuItem" xml:space="preserve">
    <value>混合视频和只有一个音频文件</value>
  </data>
  <data name="mergeVideoDesktopAndMicAudioToolStripMenuItem" xml:space="preserve">
    <value>混合所有媒体文件</value>
  </data>
  <data name="message1" xml:space="preserve">
    <value>你必须先按下录音按钮。</value>
  </data>
  <data name="RadioDesktop" xml:space="preserve">
    <value>只有系统音频 （Desktop Audio）</value>
  </data>
  <data name="radioMicrophone" xml:space="preserve">
    <value>只有麦克风音频 （Mic/Aux）</value>
  </data>
  <data name="RadioTwoTrack" xml:space="preserve">
    <value>系统声音和话筒音频</value>
  </data>
  <data name="remuxToolStripMenuItem" xml:space="preserve">
    <value>合并媒体文件</value>
  </data>
  <data name="titleMerge1" xml:space="preserve">
    <value>只混合来自计算机的视频和音频</value>
  </data>
  <data name="titleMerge2" xml:space="preserve">
    <value>混合所有文件</value>
  </data>
</root>